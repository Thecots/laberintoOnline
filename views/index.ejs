<style>
section.games{
  margin-top: 10px;
  display: flex;
  flex-direction: column;
}

section.games section{
  height: 250px;
  display: flex;
  align-items: center;
  justify-content: center;
}

section.games section h1{
  font-weight: 300;
  font-size: 45px;
}


section.games div{
  width: 100%;
  height: 40px;
  display: flex;
  align-items: center;
  gap: 5px;
  padding: 10px 2px;
  border-bottom: 1px solid rgb(53, 53, 53);
  border-bottom-style: dashed;
  justify-content: space-between;
}

section.games div:last-child{
  border-bottom-style: none;
}

section.games div img {
  width: 50px;
}

</style>
<header>
  <h1>Partidas</h1>
  <div>
    <a href="/crear_partida">Crear partida</a>
    <a href="/crear_mapa">Crear mapa</a>
  </div>
</header>
<main>
  <section class="games">
  </section>
</main>

<script src="http://localhost:3000/socket.io/socket.io.js"></script>
<script>
  const socket = io('http://localhost:3000')
  const rooms = [];
  
    socket.on('user-connected', player => {
      console.log(player);
    })


  socket.on('update-rooms', () => {
      getRooms()
  })

  class Partida{
    constructor(id, title, creador, usuarios,maxusuarios){
      this.id = id
      this.title = title
      this.creador = creador
      this.usuarios = usuarios
      this.maxusuarios = maxusuarios
    }

    draw(){
      document.querySelector('.games').innerHTML = `
      <div>
        <h1>Partida ${this.title}</h1>
        <p>Creada por: <b>${this.creador}</b></p>
        <p>${this.usuarios}/${this.maxusuarios} usuarios</p>
        <a href="/jugar/${this.id}">Unirse</a>
      </div>
      `
    }
  }


  function getRooms(){
    fetch('/getRooms',{
      method: 'POST'
    })
    .then(r => r.json())
    .then(r =>{
      document.querySelector('.games').innerHTML = ''
      r.data.forEach((n,i) => {
        new Partida(n.id,n.title, n.creator,n.players,n.maxplayers).draw()
      });
    })
  }

  getRooms()

</script>